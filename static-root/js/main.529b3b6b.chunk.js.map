{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","console","log","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleAtionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","hideActions","retweeter","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setnextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.529b3b6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    var cookies = document.cookie.split(';');\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  console.log(\"Hello\")\r\n  console.log(jsonData)\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  if (csrftoken) {\r\n    console.log(jsonData)\r\n    xhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\",\"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\",csrftoken)\r\n  }\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\") {\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import {backendLookup} from \"../lookup/components\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\"POST\",\"/tweets/create/\", callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action:action}\r\n    backendLookup(\"POST\",\"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\",`/tweets/${tweetId}/`,callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint= \"/tweets/feed\"\r\n    if (nextUrl != null && nextUrl != undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n  backendLookup(\"GET\",endpoint,callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint= \"/tweets/\"\r\n    if (username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl != null && nextUrl != undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n  backendLookup(\"GET\",endpoint,callback)\r\n}","import {apiTweetAction} from \"./lookup\";\r\nimport React from \"react\";\r\n\r\nexport function ActionBtn(props) {\r\n  const {tweet, action, didPerformAction} = props\r\n  const likes = tweet.likes ? tweet.likes : 0\r\n  const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n  const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n  const handleAtionBackendEvent = (response, status) =>{\r\n    console.log(response, status)\r\n    if ((status === 200 || status === 201) && didPerformAction){\r\n      didPerformAction(response, status)\r\n    }\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault()\r\n    apiTweetAction(tweet.id, action.type, handleAtionBackendEvent)\r\n  }\r\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n  return <button className={className} onClick={handleClick}>{display}</button>\r\n}","import React from \"react\";\r\n\r\n\r\nexport function UserLink(props) {\r\n  const {username} = props\r\n  const handleUserLink = (event) => {\r\n    window.location.href = `/profiles/${username}`\r\n  }\r\n  return <span className='pointer' onClick={handleUserLink}>\r\n    {props.children}\r\n  </span>\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n  const {user, includeFullName} = props\r\n  const nameDisplay = includeFullName===true ? `${user.first_name} ${user.last_name} ` : null\r\n  return <React.Fragment>\r\n    {nameDisplay}\r\n    <UserLink username={user.username}>@{user.username}</UserLink>\r\n  </React.Fragment>\r\n}\r\n\r\nexport function UserPicture(props) {\r\n  const {user} = props\r\n  return <UserLink username={user.username}><span className='px-3 py-2 rounded-circle bg-dark text-white'>\r\n      {user.username[0]}</span>\r\n    </UserLink>\r\n}","import React, {useState} from \"react\";\r\nimport {ActionBtn} from \"./buttons\";\r\nimport {UserDisplay, UserPicture} from \"../profiles\";\r\n\r\nexport function ParentTweet(props) {\r\n  const {tweet} = props\r\n  return tweet.parent ?\r\n      <Tweet isRetweet hideActions retweeter={props.retweeter} className={''} tweet={tweet.parent} /> : null\r\n}\r\n\r\n\r\nexport function Tweet(props) {\r\n  const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n  let className = props.className ? props.className : 'col-10 col-md-6'\r\n  className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n  const path = window.location.pathname\r\n  const match = path.match(/(?<tweetid>\\d+)/)\r\n  const urlTweetId = match ? match.groups.tweetid : -1\r\n  const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n  const handleLink = (event) => {\r\n    event.preventDefault()\r\n    window.location.href = `/${tweet.id}`\r\n  }\r\n\r\n  const handlePerformAction = (newActionTweet,status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet)\r\n    } else if (status === 201) {\r\n      if (didRetweet){\r\n        didRetweet(newActionTweet)\r\n      }\r\n    }\r\n  }\r\n  return <div className={className}>\r\n    { isRetweet === true && <div className='mb-2'>\r\n        <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n    </div>}\r\n    <div className='d-flex'>\r\n      <div className=''>\r\n        <UserPicture user={tweet.user} />\r\n      </div>\r\n      <div className='col-11'>\r\n        <div>\r\n          <p>\r\n            <UserDisplay includeFullName user={tweet.user} />\r\n          </p>\r\n          <p>{tweet.content}</p>\r\n          <ParentTweet tweet={tweet} retweeter={tweet.user}/>\r\n        </div>\r\n        <div className='btn btn-group px-0'>\r\n          {(actionTweet && hideActions !== true) && <React.Fragment>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: 'like', display:\"Likes\"}}/>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: 'unlike', display:\"UnLike\"}}/>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: 'retweet', display:\"ReTweet\"}}/>\r\n          </React.Fragment>}\r\n          {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetList} from \"./lookup\";\r\nimport {Tweet} from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([])\r\n  const [tweets, setTweets] = useState([])\r\n  const [nextUrl, setnextUrl] = useState([])\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit)\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final)\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit])\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setnextUrl(response.next)\r\n          setTweetsInit(response.results)\r\n          setTweetsDidSet(true)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n      }\r\n      apiTweetList(props.username, handleTweetListLookup)\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit]\r\n    updateTweetsInit.unshift(newTweet)\r\n    setTweetsInit(updateTweetsInit)\r\n    const updateFinalTweets = [...tweets]\r\n    updateFinalTweets.unshift(tweets)\r\n    setTweets(updateFinalTweets)\r\n  }\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault()\r\n    if (nextUrl != null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setnextUrl(response.next)\r\n          const newTweets = [...tweets].concat(response.results)\r\n          setTweetsInit(newTweets)\r\n          setTweets(newTweets)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n      }\r\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet\r\n          tweet={item}\r\n          didRetweet={handleDidRetweet}\r\n          className='my-5 py-5 border bg-white text-dark'\r\n          key={`${index}-${item.id}`} />\r\n    })}\r\n    { nextUrl != null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button> }\r\n  </React.Fragment>\r\n}","import React from \"react\";\r\nimport {apiTweetCreate} from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n  const handleBackendUpdate = (response,status) =>{\r\n    if (status === 201) {\r\n      didTweet(response)\r\n    } else {\r\n      console.log(response)\r\n      alert(\"An error occurred please try again\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    apiTweetCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ''\r\n  }\r\n\r\n  return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control'>\r\n\r\n            </textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n          </form>\r\n        </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetFeed} from \"./lookup\";\r\nimport {Tweet} from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([])\r\n  const [tweets, setTweets] = useState([])\r\n  const [nextUrl, setnextUrl] = useState([])\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit)\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final)\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit])\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setnextUrl(response.next)\r\n          setTweetsInit(response.results)\r\n          setTweetsDidSet(true)\r\n        }\r\n      }\r\n      apiTweetFeed(handleTweetListLookup)\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit]\r\n    updateTweetsInit.unshift(newTweet)\r\n    setTweetsInit(updateTweetsInit)\r\n    const updateFinalTweets = [...tweets]\r\n    updateFinalTweets.unshift(tweets)\r\n    setTweets(updateFinalTweets)\r\n  }\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault()\r\n    if (nextUrl != null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setnextUrl(response.next)\r\n          const newTweets = [...tweets].concat(response.results)\r\n          setTweetsInit(newTweets)\r\n          setTweets(newTweets)\r\n        }\r\n      }\r\n      apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet\r\n          tweet={item}\r\n          didRetweet={handleDidRetweet}\r\n          className='my-5 py-5 border bg-white text-dark'\r\n          key={`${index}-${item.id}`} />\r\n    })}\r\n    { nextUrl != null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button> }\r\n  </React.Fragment>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {TweetsList} from \"./list\"\r\nimport {TweetCreate} from \"./create\";\r\nimport {apiTweetDetail} from \"./lookup\";\r\nimport {FeedList} from \"./feed\";\r\nimport {Tweet} from \"./detail\";\r\n\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === 'false' ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <FeedList newTweets={newTweets} {...props}/>\r\n  </div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === 'false' ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <TweetsList newTweets={newTweets} {...props}/>\r\n  </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error finding your tweet\")\r\n    }\r\n  }\r\n  useEffect(()=> {\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from \"./tweets\";\n\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from \"./tweets\";\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>, appEl\n    );\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById('tweetme')\nif (tweetsEl) {\n    ReactDOM.render(\n        e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById('tweetme-feed')\nif (tweetFeedEl) {\n    ReactDOM.render(\n        e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-detail\")\n\ntweetDetailElements.forEach(container => {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), container);\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}