{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","console","log","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleAtionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","hideActions","retweeter","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setnextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,iMCgBpC,SAASC,EAAcC,EAAQC,EAAUC,EAAUC,GACxD,IAAIC,EACAD,IACFC,EAAWC,KAAKC,UAAUH,IAE5BI,QAAQC,IAAI,SACZD,QAAQC,IAAIJ,GACZ,IAAMK,EAAM,IAAIC,eACVC,EAAG,mCAA+BV,GACxCQ,EAAIG,aAAe,OACnB,IAAMC,EA1BR,SAAmBC,GACjB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE9B,IADA,IAAIC,EAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAIH,EAASC,EAAQE,GAAGE,OAExB,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIR,OAAON,EAaWU,CAAU,aAC5BhB,EAAIiB,KAAK1B,EAAQW,GACjBF,EAAIkB,iBAAiB,eAAgB,oBACjCd,IACFN,QAAQC,IAAIJ,GACZK,EAAIkB,iBAAiB,mBAAmB,kBACxClB,EAAIkB,iBAAiB,wBAAwB,kBAC7ClB,EAAIkB,iBAAiB,cAAcd,IAErCJ,EAAImB,OAAS,WACQ,MAAfnB,EAAIoB,SAES,kDADApB,EAAIqB,SAASC,SAEqB,IAA3CC,OAAOC,SAASC,KAAKC,QAAQ,WAC/BH,OAAOC,SAASC,KAAO,kCAI7BhC,EAASO,EAAIqB,SAAUrB,EAAIoB,SAE7BpB,EAAI2B,QAAU,SAAUC,GACtBnC,EAAS,CAAC,QAAW,4BAA6B,MAEpDO,EAAI6B,KAAKlC,GClCJ,SAASmC,EAAarC,EAAUsC,GACnC,IAAIvC,EAAU,eACE,OAAZuC,QAAgCC,IAAZD,IACpBvC,EAAWuC,EAAQE,QAAQ,4BAA6B,KAE9D3C,EAAc,MAAME,EAASC,GAGxB,SAASyC,EAAaC,EAAU1C,EAAUsC,GAC7C,IAAIvC,EAAU,WACV2C,IACA3C,EAAQ,4BAAwB2C,IAEpB,OAAZJ,QAAgCC,IAAZD,IACpBvC,EAAWuC,EAAQE,QAAQ,4BAA6B,KAE9D3C,EAAc,MAAME,EAASC,G,WC5BxB,SAAS2C,EAAUC,GAAQ,IACzBC,EAAmCD,EAAnCC,MAAOC,EAA4BF,EAA5BE,OAAQC,EAAoBH,EAApBG,iBAChBC,EAAQH,EAAMG,MAAQH,EAAMG,MAAQ,EACpCC,EAAYL,EAAMK,UAAYL,EAAMK,UAAY,yBAChDC,EAAgBJ,EAAOK,QAAUL,EAAOK,QAAU,SAElDC,EAA0B,SAACxB,EAAUD,GACzCtB,QAAQC,IAAIsB,EAAUD,GACN,MAAXA,GAA6B,MAAXA,IAAmBoB,GACxCA,EAAiBnB,EAAUD,IAQzBwB,EAA0B,SAAhBL,EAAOO,KAAP,UAA4BL,EAA5B,YAAqCE,GAAkBA,EACvE,OAAO,4BAAQD,UAAWA,EAAWK,QALjB,SAACC,GACnBA,EAAMC,iBDXH,SAAwBC,EAASX,EAAQ9C,GAE5CH,EAAc,OAAO,kBAAmBG,EAD3B,CAAC0D,GAAID,EAASX,OAAOA,ICWlCa,CAAed,EAAMa,GAAIZ,EAAOO,KAAMD,KAGoBD,GClBvD,SAASS,EAAShB,GAAQ,IACxBF,EAAYE,EAAZF,SAIP,OAAO,0BAAMO,UAAU,UAAUK,QAHV,SAACC,GACtBzB,OAAOC,SAASC,KAAhB,oBAAoCU,KAGnCE,EAAMiB,UAIJ,SAASC,EAAYlB,GAAQ,IAC3BmB,EAAmCnB,EAAnCmB,KAAMC,EAA6BpB,EAA7BoB,gBAAiBC,EAAYrB,EAAZqB,SACxBC,GAAgC,IAAlBF,EAAA,UAA4BD,EAAKI,WAAjC,YAA+CJ,EAAKK,UAApD,KAAmE,KACvF,OAAO,kBAAC,IAAMC,SAAP,KACJH,GACa,IAAbD,EAAA,WAAwBF,EAAKrB,UAAY,kBAACkB,EAAD,CAAUlB,SAAUqB,EAAKrB,UAAzB,IAAqCqB,EAAKrB,WAIjF,SAAS4B,EAAY1B,GAAQ,IAC3BmB,EAAkBnB,EAAlBmB,KAAME,EAAYrB,EAAZqB,SACPM,EAAa,0BAAMtB,UAAU,+CAC9Bc,EAAKrB,SAAS,IACnB,OAAoB,IAAbuB,EAAoBM,EAAa,kBAACX,EAAD,CAAUlB,SAAUqB,EAAKrB,UAAW6B,G,oBCvBvE,SAASC,EAAa5B,GACzB,OAAO,0BAAMK,UAAWL,EAAMK,WAAYwB,IAAQ7B,EAAMiB,UAAUa,OAAO,OCE7E,SAASC,EAAa/B,GAAQ,IACnBmB,EAAyCnB,EAAzCmB,KAAMa,EAAmChC,EAAnCgC,gBAAiBC,EAAkBjC,EAAlBiC,eAC1BC,EAAef,GAAQA,EAAKgB,aAAgB,WAAa,SAC7DD,EAAcD,EAAiB,aAAeC,EAO9C,OAAOf,EAAO,6BACV,kBAACO,EAAD,CAAaP,KAAMA,EAAME,UAAQ,IACjC,2BAAG,kBAACH,EAAD,CAAaC,KAAMA,EAAMC,iBAAe,EAACC,UAAQ,KACpD,2BAAG,kBAACO,EAAD,KAAeT,EAAKiB,gBAAvB,IAA+E,IAAxBjB,EAAKiB,eAAuB,WAAa,aAChG,+BAAI,kBAACR,EAAD,KAAeT,EAAKkB,iBAAxB,cACA,2BAAIlB,EAAKhC,UACT,2BAAIgC,EAAKmB,KACT,4BAAQjC,UAAU,kBAAkBK,QAbb,SAACC,GACxBA,EAAMC,iBACFoB,IAAoBC,GACpBD,EAAgBE,KAU8CA,IAC7D,KAGN,SAASK,EAAsBvC,GAAQ,IACnCF,EAAYE,EAAZF,SADkC,EAEP0C,oBAAS,GAFF,mBAElCC,EAFkC,KAEvBC,EAFuB,OAGXF,mBAAS,MAHE,mBAGlCG,EAHkC,KAGzBC,EAHyB,OAIGJ,oBAAS,GAJZ,mBAIlCP,EAJkC,KAIlBY,EAJkB,KAKnCC,EAAsB,SAAC9D,EAAUD,GACpB,MAAXA,GACF6D,EAAW5D,IAGjB+D,qBAAU,YACY,IAAdN,KCpCL,SAA0B3C,EAAU1C,GACzCH,EAAc,MAAD,oBAAoB6C,EAApB,KAAgC1C,GDoCrC4F,CAAiBlD,EAAUgD,GAC3BJ,GAAa,MAEhB,CAAC5C,EAAU2C,EAAWC,IAYzB,OAAqB,IAAdD,EAAsB,aAAeE,EAAU,kBAACZ,EAAD,CAAcZ,KAAMwB,EAASX,gBAV3D,SAACiB,ICtCtB,SAAgCnD,EAAUI,EAAQ9C,GACvD,IAAMC,EAAO,CAAC6C,OAAO,UAAGA,GAAUA,GAASgD,eAC3CjG,EAAc,OAAD,oBAAqB6C,EAArB,WAAuC1C,EAAUC,GDqCxD8F,CAAuBrD,EAAUmD,GAAY,SAACjE,EAASD,GACpC,MAAXA,GACA6D,EAAW5D,GAGf6D,GAAkB,MAEtBA,GAAkB,IAE+FZ,eAAgBA,IAAqB,KElDvJ,SAASmB,EAAYpD,GAAQ,IAC3BC,EAASD,EAATC,MACP,OAAOA,EAAMoD,OACT,kBAACC,EAAD,CAAOC,WAAS,EAACC,aAAW,EAACC,UAAWzD,EAAMyD,UAAWpD,UAAW,GAAIJ,MAAOA,EAAMoD,SAAa,KAIjG,SAASC,EAAMtD,GAAQ,IACrBC,EAAwDD,EAAxDC,MAAOyD,EAAiD1D,EAAjD0D,WAAYF,EAAqCxD,EAArCwD,YAAaD,EAAwBvD,EAAxBuD,UAAWE,EAAazD,EAAbyD,UADvB,EAEWjB,mBAASxC,EAAMC,MAAQD,EAAMC,MAAQ,MAFhD,mBAEpB0D,EAFoB,KAEPC,EAFO,KAGvBvD,EAAYL,EAAMK,UAAYL,EAAMK,UAAY,kBACpDA,GAA0B,IAAdkD,EAAA,UAAwBlD,EAAxB,uBAAyDA,EACrE,IACMwD,EADO3E,OAAOC,SAAS2E,SACVD,MAAL,YAAW,WAAX,cACRE,EAAaF,EAAQA,EAAMG,OAAOC,SAAW,EAC7CC,EAAW,UAAGjE,EAAMa,MAAT,UAAqBiD,GAOhCI,EAAsB,SAACC,EAAerF,GAC3B,MAAXA,EACF6E,EAAeQ,GACK,MAAXrF,GACL2E,GACFA,EAAWU,IAIjB,OAAO,yBAAK/D,UAAWA,IACL,IAAdkD,GAAsB,yBAAKlD,UAAU,QACnC,0BAAMA,UAAU,oBAAhB,eAA+C,kBAACa,EAAD,CAAaC,KAAMsC,MAEtE,yBAAKpD,UAAU,UACb,yBAAKA,UAAU,IACb,kBAACqB,EAAD,CAAaP,KAAMlB,EAAMkB,QAE3B,yBAAKd,UAAU,UACb,6BACE,2BACE,kBAACa,EAAD,CAAaE,iBAAe,EAACD,KAAMlB,EAAMkB,QAE3C,2BAAIlB,EAAMoE,SACV,kBAACjB,EAAD,CAAanD,MAAOA,EAAOwD,UAAWxD,EAAMkB,QAE9C,yBAAKd,UAAU,sBACXsD,IAA+B,IAAhBH,GAAyB,kBAAC,IAAM/B,SAAP,KACxC,kBAAC1B,EAAD,CAAWE,MAAO0D,EAAaxD,iBAAkBgE,EAAqBjE,OAAQ,CAACO,KAAM,OAAQF,QAAQ,WACrG,kBAACR,EAAD,CAAWE,MAAO0D,EAAaxD,iBAAkBgE,EAAqBjE,OAAQ,CAACO,KAAM,SAAUF,QAAQ,YACvG,kBAACR,EAAD,CAAWE,MAAO0D,EAAaxD,iBAAkBgE,EAAqBjE,OAAQ,CAACO,KAAM,UAAWF,QAAQ,eAE5F,IAAb2D,EAAoB,KAAO,4BAAQ7D,UAAU,iCAAiCK,QApCpE,SAACC,GAClBA,EAAMC,iBACN1B,OAAOC,SAASC,KAAhB,WAA2Ba,EAAMa,MAkCC,YCrD/B,SAASwD,EAAWtE,GAAQ,IAAD,EACIwC,mBAAS,IADb,mBACzB+B,EADyB,KACbC,EADa,OAEJhC,mBAAS,IAFL,mBAEzBiC,EAFyB,KAEjBC,EAFiB,OAGFlC,mBAAS,IAHP,mBAGzB9C,EAHyB,KAGhBiF,EAHgB,OAIQnC,oBAAS,GAJjB,mBAIzBoC,EAJyB,KAIXC,EAJW,KAKhC9B,qBAAU,WACR,IAAM+B,EAAQ,YAAI9E,EAAM+E,WAAWC,OAAOT,GACtCO,EAAMvG,SAAWkG,EAAOlG,QAC1BmG,EAAUI,KAEX,CAAC9E,EAAM+E,UAAWN,EAAQF,IAC7BxB,qBAAU,WACR,IAAqB,IAAjB6B,EAAwB,CAU1B/E,EAAaG,EAAMF,UATW,SAACd,EAAUD,GACxB,MAAXA,GACF4F,EAAW3F,EAASiG,MACpBT,EAAcxF,EAASkG,SACvBL,GAAgB,IAEhBM,MAAM,4BAKX,CAACZ,EAAYK,EAAcC,EAAiB7E,EAAMF,WAErD,IAAMsF,EAAmB,SAACC,GACxB,IAAMC,EAAgB,YAAOf,GAC7Be,EAAiBC,QAAQF,GACzBb,EAAcc,GACd,IAAME,EAAiB,YAAOf,GAC9Be,EAAkBD,QAAQd,GAC1BC,EAAUc,IAmBZ,OAAO,kBAAC,IAAM/D,SAAP,KAAiBgD,EAAOgB,KAAI,SAACC,EAAMC,GACtC,OAAO,kBAACrC,EAAD,CACHrD,MAAOyF,EACPhC,WAAY0B,EACZ/E,UAAU,sCACVuF,IAAG,UAAKD,EAAL,YAAcD,EAAK5E,SAEf,MAAXpB,GAAmB,4BAAQgB,QAxBR,SAACC,GAEtB,GADAA,EAAMC,iBACS,MAAXlB,EAAiB,CAWnBG,EAAaG,EAAMF,UAVY,SAACd,EAAUD,GACxC,GAAe,MAAXA,EAAgB,CAClB4F,EAAW3F,EAASiG,MACpB,IAAMF,EAAY,YAAIN,GAAQO,OAAOhG,EAASkG,SAC9CV,EAAcO,GACdL,EAAUK,QAEVI,MAAM,wBAG2CzF,KAWDW,UAAU,2BAA3C,cC3DlB,SAASwF,EAAY7F,GAC1B,IAAM8F,EAAcC,IAAMC,YACnBC,EAAYjG,EAAZiG,SACDC,EAAsB,SAAClH,EAASD,GACrB,MAAXA,EACFkH,EAASjH,IAETvB,QAAQC,IAAIsB,GACZmG,MAAM,wCAWV,OAAO,yBAAK9E,UAAWL,EAAMK,WACrB,0BAAM8F,SARO,SAACxF,GACpBA,EAAMC,iBACN,IAAMwF,EAASN,EAAYO,QAAQC,MRdrCrJ,EAAc,OAAO,kBQeIiJ,ERfyB,CAAC7B,QQelC+B,IACfN,EAAYO,QAAQC,MAAQ,KAKpB,8BAAUC,IAAKT,EAAaU,UAAU,EAAMnG,UAAU,iBAGtD,4BAAQI,KAAK,SAASJ,UAAU,wBAAhC,WCvBL,SAASoG,EAASzG,GAAQ,IAAD,EACMwC,mBAAS,IADf,mBACvB+B,EADuB,KACXC,EADW,OAEFhC,mBAAS,IAFP,mBAEvBiC,EAFuB,KAEfC,EAFe,OAGAlC,mBAAS,IAHT,mBAGvB9C,EAHuB,KAGdiF,EAHc,OAIUnC,oBAAS,GAJnB,mBAIvBoC,EAJuB,KAITC,EAJS,KAK9B9B,qBAAU,WACR,IAAM+B,EAAQ,YAAI9E,EAAM+E,WAAWC,OAAOT,GACtCO,EAAMvG,SAAWkG,EAAOlG,QAC1BmG,EAAUI,KAEX,CAAC9E,EAAM+E,UAAWN,EAAQF,IAC7BxB,qBAAU,WACR,IAAqB,IAAjB6B,EAAwB,CAQ1BnF,GAP8B,SAACT,EAAUD,GACxB,MAAXA,IACF4F,EAAW3F,EAASiG,MACpBT,EAAcxF,EAASkG,SACvBL,GAAgB,UAKrB,CAACN,EAAYK,EAAcC,EAAiB7E,EAAMF,WAErD,IAAMsF,EAAmB,SAACC,GACxB,IAAMC,EAAgB,YAAOf,GAC7Be,EAAiBC,QAAQF,GACzBb,EAAcc,GACd,IAAME,EAAiB,YAAOf,GAC9Be,EAAkBD,QAAQd,GAC1BC,EAAUc,IAiBZ,OAAO,kBAAC,IAAM/D,SAAP,KAAiBgD,EAAOgB,KAAI,SAACC,EAAMC,GACtC,OAAO,kBAACrC,EAAD,CACHrD,MAAOyF,EACPhC,WAAY0B,EACZ/E,UAAU,sCACVuF,IAAG,UAAKD,EAAL,YAAcD,EAAK5E,SAEf,MAAXpB,GAAmB,4BAAQgB,QAtBR,SAACC,GAEtB,GADAA,EAAMC,iBACS,MAAXlB,EAAiB,CASnBD,GAR+B,SAACT,EAAUD,GACxC,GAAe,MAAXA,EAAgB,CAClB4F,EAAW3F,EAASiG,MACpB,IAAMF,EAAY,YAAIN,GAAQO,OAAOhG,EAASkG,SAC9CV,EAAcO,GACdL,EAAUK,MAGuBrF,KAWeW,UAAU,2BAA3C,cCpClB,SAASqG,EAAgB1G,GAAQ,IAAD,EACHwC,mBAAS,IADN,mBAC9BuC,EAD8B,KACnB4B,EADmB,KAE/BC,EAA8B,UAAnB5G,EAAM4G,SAMvB,OAAO,yBAAKvG,UAAWL,EAAMK,YACP,IAAbuG,GAAqB,kBAACf,EAAD,CAAaI,SANpB,SAACZ,GACtB,IAAIwB,EAAa,YAAO9B,GACxB8B,EAActB,QAAQF,GACtBsB,EAAaE,IAGsDxG,UAAU,gBACvE,kBAACiE,EAAD,eAAYS,UAAWA,GAAe/E,KAIzC,SAAS8G,EAAqB9G,GAAQ,IACpCa,EAAWb,EAAXa,QADmC,EAER2B,oBAAS,GAFD,mBAEnCC,EAFmC,KAExBC,EAFwB,OAGhBF,mBAAS,MAHO,mBAGnCvC,EAHmC,KAG5B8G,EAH4B,KAKpCjE,EAAsB,SAAC9D,EAAUD,GACtB,MAAXA,EACFgI,EAAS/H,GAETmG,MAAM,0CAUV,OAPApC,qBAAU,YACU,IAAdN,KVtCD,SAAwB5B,EAASzD,GACtCH,EAAc,MAAD,kBAAkB4D,EAAlB,KAA6BzD,GUsCtC4J,CAAenG,EAASiC,GACxBJ,GAAa,MAEd,CAAC7B,EAAS4B,EAAWC,IAEP,OAAVzC,EAAiB,KAAO,kBAACqD,EAAD,CAAOrD,MAAOA,EAAOI,UAAWL,EAAMK,YCrBxD4G,MAzBf,WAEE,OACE,yBAAK5G,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAK6G,IAAKC,IAAM9G,UAAU,WAAW+G,IAAI,SACzC,mCACO,4CADP,wBAGA,6BACE,kBAACV,EAAD,OAEF,uBACErG,UAAU,WACVjB,KAAK,sBACLiI,OAAO,SACPC,IAAI,uBAJN,kBCTYC,QACW,cAA7BrI,OAAOC,SAASqI,UAEe,UAA7BtI,OAAOC,SAASqI,UAEhBtI,OAAOC,SAASqI,SAAS3D,MACvB,2DCVN,IAAM4D,EAAQvJ,SAASwJ,eAAe,QAClCD,GACAE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OACmBJ,GAG3B,IAAMlI,EAAIwG,IAAM+B,cACVC,EAAW7J,SAASwJ,eAAe,WACrCK,GACAJ,IAASC,OACLrI,EAAEmH,EAAiBqB,EAASC,SAAUD,GAG9C,IAAME,EAAc/J,SAASwJ,eAAe,gBACxCO,GACAN,IAASC,OACLrI,GHlBD,SAAuBS,GAAQ,IAAD,EACDwC,mBAAS,IADR,mBAC5BuC,EAD4B,KACjB4B,EADiB,KAE7BC,EAA8B,UAAnB5G,EAAM4G,SAMvB,OAAO,yBAAKvG,UAAWL,EAAMK,YACP,IAAbuG,GAAqB,kBAACf,EAAD,CAAaI,SANpB,SAACZ,GACtB,IAAIwB,EAAa,YAAO9B,GACxB8B,EAActB,QAAQF,GACtBsB,EAAaE,IAGsDxG,UAAU,gBACvE,kBAACoG,EAAD,eAAU1B,UAAWA,GAAe/E,OGQrBiI,EAAYD,SAAUC,GAGnB/J,SAASgK,iBAAiB,mBAElCC,SAAQ,SAAAC,GACxBT,IAASC,OACLrI,EAAEuH,EAAsBsB,EAAUJ,SAAUI,MAGnBlK,SAASgK,iBAAiB,0BAElCC,SAAQ,SAAAC,GAC7BT,IAASC,OACLrI,EAAEgD,EAAuB6F,EAAUJ,SAAUI,MD2F/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnL,QAAQmL,MAAMA,EAAMC,c","file":"static/js/main.821bd9d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    var cookies = document.cookie.split(';');\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  console.log(\"Hello\")\r\n  console.log(jsonData)\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  if (csrftoken) {\r\n    console.log(jsonData)\r\n    xhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\",\"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\",csrftoken)\r\n  }\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\") {\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import {backendLookup} from \"../lookup/components\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\"POST\",\"/tweets/create/\", callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action:action}\r\n    backendLookup(\"POST\",\"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\",`/tweets/${tweetId}/`,callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint= \"/tweets/feed\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n  backendLookup(\"GET\",endpoint,callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint= \"/tweets/\"\r\n    if (username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n  backendLookup(\"GET\",endpoint,callback)\r\n}","import {apiTweetAction} from \"./lookup\";\r\nimport React from \"react\";\r\n\r\nexport function ActionBtn(props) {\r\n  const {tweet, action, didPerformAction} = props\r\n  const likes = tweet.likes ? tweet.likes : 0\r\n  const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n  const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n  const handleAtionBackendEvent = (response, status) =>{\r\n    console.log(response, status)\r\n    if ((status === 200 || status === 201) && didPerformAction){\r\n      didPerformAction(response, status)\r\n    }\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault()\r\n    apiTweetAction(tweet.id, action.type, handleAtionBackendEvent)\r\n  }\r\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n  return <button className={className} onClick={handleClick}>{display}</button>\r\n}","import React from \"react\";\r\n\r\n\r\nexport function UserLink(props) {\r\n  const {username} = props\r\n  const handleUserLink = (event) => {\r\n    window.location.href = `/profiles/${username}`\r\n  }\r\n  return <span className='pointer' onClick={handleUserLink}>\r\n    {props.children}\r\n  </span>\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n  const {user, includeFullName, hideLink} = props\r\n  const nameDisplay = includeFullName===true ? `${user.first_name} ${user.last_name} ` : null\r\n  return <React.Fragment>\r\n    {nameDisplay}\r\n    {hideLink === true ? `@${user.username}`: <UserLink username={user.username}>@{user.username}</UserLink>}\r\n  </React.Fragment>\r\n}\r\n\r\nexport function UserPicture(props) {\r\n  const {user, hideLink} = props\r\n  const userIdSpan = <span className='px-3 py-2 rounded-circle bg-dark text-white'>\r\n      {user.username[0]}</span>\r\n  return hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}\r\n    </UserLink>\r\n}","import numeral from \"numeral\";\r\nimport React from \"react\";\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiProfileDetail,apiProfileFollowToggle} from \"./lookup\";\r\nimport {UserDisplay, UserPicture} from \"./components\";\r\nimport {DisplayCount} from \"./utils\";\r\n\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, didFollowToggle, profileLoading} = props\r\n    let currentVerb = (user && user.is_following) ? \"UnFollow\" : \"Follow\"\r\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault()\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    }\r\n    return user ? <div>\r\n        <UserPicture user={user} hideLink />\r\n        <p><UserDisplay user={user} includeFullName hideLink/></p>\r\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"}</p>\r\n        <p> <DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n        <p>{user.location}</p>\r\n        <p>{user.bio}</p>\r\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\r\n    </div> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n    const {username} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileLoading, setProfileLoading] = useState(false)\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setProfile(response)\r\n        }\r\n    }\r\n    useEffect(()=> {\r\n        if (didLookup === false) {\r\n          apiProfileDetail(username, handleBackendLookup)\r\n          setDidLookup(true)\r\n        }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (response,status)=>{\r\n            if (status === 200) {\r\n                setProfile(response)\r\n                // apiProfileDetail(username, handleBackendLookup)\r\n            }\r\n            setProfileLoading(false)\r\n        })\r\n        setProfileLoading(true)\r\n    }\r\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\r\n}","import {backendLookup} from \"../lookup\";\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n  backendLookup(\"GET\",`/profiles/${username}/`,callback)\r\n}\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n  const data = {action:`${action && action}`.toLowerCase()}\r\n  backendLookup(\"POST\",`/profiles/${username}/follow`,callback, data)\r\n}","import React, {useState} from \"react\";\r\nimport {ActionBtn} from \"./buttons\";\r\nimport {UserDisplay, UserPicture} from \"../profiles\";\r\n\r\nexport function ParentTweet(props) {\r\n  const {tweet} = props\r\n  return tweet.parent ?\r\n      <Tweet isRetweet hideActions retweeter={props.retweeter} className={''} tweet={tweet.parent} /> : null\r\n}\r\n\r\n\r\nexport function Tweet(props) {\r\n  const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n  let className = props.className ? props.className : 'col-10 col-md-6'\r\n  className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n  const path = window.location.pathname\r\n  const match = path.match(/(?<tweetid>\\d+)/)\r\n  const urlTweetId = match ? match.groups.tweetid : -1\r\n  const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n  const handleLink = (event) => {\r\n    event.preventDefault()\r\n    window.location.href = `/${tweet.id}`\r\n  }\r\n\r\n  const handlePerformAction = (newActionTweet,status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet)\r\n    } else if (status === 201) {\r\n      if (didRetweet){\r\n        didRetweet(newActionTweet)\r\n      }\r\n    }\r\n  }\r\n  return <div className={className}>\r\n    { isRetweet === true && <div className='mb-2'>\r\n        <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n    </div>}\r\n    <div className='d-flex'>\r\n      <div className=''>\r\n        <UserPicture user={tweet.user} />\r\n      </div>\r\n      <div className='col-11'>\r\n        <div>\r\n          <p>\r\n            <UserDisplay includeFullName user={tweet.user} />\r\n          </p>\r\n          <p>{tweet.content}</p>\r\n          <ParentTweet tweet={tweet} retweeter={tweet.user}/>\r\n        </div>\r\n        <div className='btn btn-group px-0'>\r\n          {(actionTweet && hideActions !== true) && <React.Fragment>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: 'like', display:\"Likes\"}}/>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: 'unlike', display:\"UnLike\"}}/>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: 'retweet', display:\"ReTweet\"}}/>\r\n          </React.Fragment>}\r\n          {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetList} from \"./lookup\";\r\nimport {Tweet} from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([])\r\n  const [tweets, setTweets] = useState([])\r\n  const [nextUrl, setnextUrl] = useState([])\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit)\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final)\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit])\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setnextUrl(response.next)\r\n          setTweetsInit(response.results)\r\n          setTweetsDidSet(true)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n      }\r\n      apiTweetList(props.username, handleTweetListLookup)\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit]\r\n    updateTweetsInit.unshift(newTweet)\r\n    setTweetsInit(updateTweetsInit)\r\n    const updateFinalTweets = [...tweets]\r\n    updateFinalTweets.unshift(tweets)\r\n    setTweets(updateFinalTweets)\r\n  }\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault()\r\n    if (nextUrl != null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setnextUrl(response.next)\r\n          const newTweets = [...tweets].concat(response.results)\r\n          setTweetsInit(newTweets)\r\n          setTweets(newTweets)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n      }\r\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet\r\n          tweet={item}\r\n          didRetweet={handleDidRetweet}\r\n          className='my-5 py-5 border bg-white text-dark'\r\n          key={`${index}-${item.id}`} />\r\n    })}\r\n    { nextUrl != null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button> }\r\n  </React.Fragment>\r\n}","import React from \"react\";\r\nimport {apiTweetCreate} from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n  const handleBackendUpdate = (response,status) =>{\r\n    if (status === 201) {\r\n      didTweet(response)\r\n    } else {\r\n      console.log(response)\r\n      alert(\"An error occurred please try again\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    apiTweetCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ''\r\n  }\r\n\r\n  return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control'>\r\n\r\n            </textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n          </form>\r\n        </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetFeed} from \"./lookup\";\r\nimport {Tweet} from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([])\r\n  const [tweets, setTweets] = useState([])\r\n  const [nextUrl, setnextUrl] = useState([])\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit)\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final)\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit])\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setnextUrl(response.next)\r\n          setTweetsInit(response.results)\r\n          setTweetsDidSet(true)\r\n        }\r\n      }\r\n      apiTweetFeed(handleTweetListLookup)\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit]\r\n    updateTweetsInit.unshift(newTweet)\r\n    setTweetsInit(updateTweetsInit)\r\n    const updateFinalTweets = [...tweets]\r\n    updateFinalTweets.unshift(tweets)\r\n    setTweets(updateFinalTweets)\r\n  }\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault()\r\n    if (nextUrl != null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setnextUrl(response.next)\r\n          const newTweets = [...tweets].concat(response.results)\r\n          setTweetsInit(newTweets)\r\n          setTweets(newTweets)\r\n        }\r\n      }\r\n      apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet\r\n          tweet={item}\r\n          didRetweet={handleDidRetweet}\r\n          className='my-5 py-5 border bg-white text-dark'\r\n          key={`${index}-${item.id}`} />\r\n    })}\r\n    { nextUrl != null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button> }\r\n  </React.Fragment>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {TweetsList} from \"./list\"\r\nimport {TweetCreate} from \"./create\";\r\nimport {apiTweetDetail} from \"./lookup\";\r\nimport {FeedList} from \"./feed\";\r\nimport {Tweet} from \"./detail\";\r\n\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === 'false' ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <FeedList newTweets={newTweets} {...props}/>\r\n  </div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === 'false' ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <TweetsList newTweets={newTweets} {...props}/>\r\n  </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error finding your tweet\")\r\n    }\r\n  }\r\n  useEffect(()=> {\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from \"./tweets\";\n\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from \"./profiles\";\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from \"./tweets\";\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>, appEl\n    );\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById('tweetme')\nif (tweetsEl) {\n    ReactDOM.render(\n        e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById('tweetme-feed')\nif (tweetFeedEl) {\n    ReactDOM.render(\n        e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-detail\")\n\ntweetDetailElements.forEach(container => {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), container);\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n    ReactDOM.render(\n        e(ProfileBadgeComponent, container.dataset), container);\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}